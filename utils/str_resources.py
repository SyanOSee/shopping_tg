from bot.keyboards.inline_keyboards import *


def about_name() -> str:
    return '‚ÑπÔ∏è –û –Ω–∞—Å'


def faq_name() -> str:
    return '‚ùì FAQ'


def cart_name() -> str:
    return 'üõí –ö–æ—Ä–∑–∏–Ω–∞'


def choose_product_name() -> str:
    return 'üõè –í—ã–±—Ä–∞—Ç—å –º–µ–±–µ–ª—å'


def payment_name() -> str:
    return 'üí∏ –û–ø–ª–∞—Ç–∞'


async def greeting_msg() -> str:
    return '<b>–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –≤ –Ω–∞—à–µ–º –º–∞–≥–∞–∑–∏–Ω–µ –º–µ–±–µ–ª–∏!</b>'


async def about_msg() -> str:
    return '–ù–∞—à–∞ –º–µ–±–µ–ª—å–Ω–∞—è –∫–æ–º–ø–∞–Ω–∏—è —Å –≥–æ—Ä–æ–¥—Å—Ç—å—é –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—É—é –∏ —Å—Ç–∏–ª—å–Ω—É—é –º–µ–±–µ–ª—å ' \
           '–¥–ª—è –≤–∞—à–µ–≥–æ –¥–æ–º–∞ —É–∂–µ –±–æ–ª–µ–µ 25 –ª–µ—Ç. –ú—ã —è–≤–ª—è–µ–º—Å—è –Ω–∞–¥–µ–∂–Ω—ã–º –ø–∞—Ä—Ç–Ω–µ—Ä–æ–º –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ ' \
           '—Ü–µ–Ω–∏—Ç –∫–æ–º—Ñ–æ—Ä—Ç, —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –∏ —ç—Å—Ç–µ—Ç–∏–∫—É –≤ —Å–≤–æ–µ–º –∏–Ω—Ç–µ—Ä—å–µ—Ä–µ.\n\n' \
           '–ó–∞ –≤—Å–µ —ç—Ç–∏ –≥–æ–¥—ã –º—ã —Å–æ–±—Ä–∞–ª–∏ –±–æ–≥–∞—Ç—ã–π –æ–ø—ã—Ç –∏ —É–∫—Ä–µ–ø–∏–ª–∏ —Å–≤–æ—é —Ä–µ–ø—É—Ç–∞—Ü–∏—é –±–ª–∞–≥–æ–¥–∞—Ä—è –≤—ã—Å–æ–∫–æ–º—É –∫–∞—á–µ—Å—Ç–≤—É ' \
           '–Ω–∞—à–∏—Ö –∏–∑–¥–µ–ª–∏–π –∏ –ø—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω–æ–º—É –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—é –∫–ª–∏–µ–Ω—Ç–æ–≤. –ú—ã —Ç—â–∞—Ç–µ–ª—å–Ω–æ –≤—ã–±–∏—Ä–∞–µ–º –º–∞—Ç–µ—Ä–∏–∞–ª—ã –∏ ' \
           '—Ä–∞–±–æ—Ç–∞–µ–º —Ç–æ–ª—å–∫–æ —Å —Ç–∞–ª–∞–Ω—Ç–ª–∏–≤—ã–º–∏ –º–∞—Å—Ç–µ—Ä–∞–º–∏, —á—Ç–æ–±—ã –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –≤–∞–º –º–µ–±–µ–ª—å, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–æ—Å–ª—É–∂–∏—Ç –¥–æ–ª–≥–∏–µ –≥–æ–¥—ã –∏ –ø–æ–¥–∞—Ä–∏—Ç –≤–∞–º —Ä–∞–¥–æ—Å—Ç—å –∏ —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–∏–µ.'


async def faq_msg() -> str:
    return '<b>1. –ö–∞–∫–æ–≤—ã —Å—Ä–æ–∫–∏ –¥–æ—Å—Ç–∞–≤–∫–∏?</b>\n' \
           ' - –û–±—ã—á–Ω–æ —Å—Ä–æ–∫–∏ –¥–æ—Å—Ç–∞–≤–∫–∏ —Å–æ—Å—Ç–∞–≤–ª—è—é—Ç –æ—Ç 3 –¥–æ 7 —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π, –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤–∞—à–µ–≥–æ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è –∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Ç–æ–≤–∞—Ä–∞.\n\n' \
           '<b>2. –ú–æ–≥—É –ª–∏ —è –≤–µ—Ä–Ω—É—Ç—å –∏–ª–∏ –æ–±–º–µ–Ω—è—Ç—å —Ç–æ–≤–∞—Ä?</b>\n' \
           ' - –î–∞, –º—ã –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º –ø–æ–ª–∏—Ç–∏–∫—É –≤–æ–∑–≤—Ä–∞—Ç–∞ –∏ –æ–±–º–µ–Ω–∞. –ï—Å–ª–∏ –≤—ã –Ω–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω—ã –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–Ω—ã–º —Ç–æ–≤–∞—Ä–æ–º, –≤—ã –º–æ–∂–µ—Ç–µ –≤–µ—Ä–Ω—É—Ç—å –µ–≥–æ –≤ —Ç–µ—á–µ–Ω–∏–µ 14 –¥–Ω–µ–π —Å–æ –¥–Ω—è –ø–æ–∫—É–ø–∫–∏.\n\n' \
           '<b>3. –ï—Å—Ç—å –ª–∏ —É –≤–∞—Å –≥–∞—Ä–∞–Ω—Ç–∏—è –Ω–∞ –ø—Ä–æ–¥—É–∫—Ü–∏—é?</b>\n' \
           ' - –î–∞, –º—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º –≥–∞—Ä–∞–Ω—Ç–∏—é –Ω–∞ –Ω–∞—à—É –ø—Ä–æ–¥—É–∫—Ü–∏—é. –°—Ä–æ–∫ –≥–∞—Ä–∞–Ω—Ç–∏–∏ –º–æ–∂–µ—Ç —Ä–∞–∑–ª–∏—á–∞—Ç—å—Å—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–æ–≤–∞—Ä–∞.'


async def get_product_card_info_msg(user_id: int, product: Product) -> (str, InlineKeyboardMarkup):
    from init_loader import db
    message = f'<b>{product.name}</b>\n\n' \
              f'<b>–û–ø–∏—Å–∞–Ω–∏–µ:</b>\n{product.description}\n\n' \
              f'<b>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞ —Å–∫–ª–∞–¥–µ:</b> {product.amount} —à—Ç.\n\n' \
              f'<b>–¶–µ–Ω–∞ —Å —É—á–µ—Ç–æ–º —Å–∫–∏–¥–∫–∏ {product.discount}%</b>: {round(product.cost * ((100 - product.discount) / 100))} —Ä—É–±.'
    keyboard = await get_add_to_cart_keyboard(product)
    if await db.check_product_in_user_cart(user_id, product):
        message += '\n\n<b>–î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∫–æ—Ä–∑–∏–Ω—É</b>'
        keyboard = await get_remove_from_cart_keyboard(product, False)

    return message, keyboard


async def back_to_catalogue_msg() -> (str, InlineKeyboardMarkup):
    return '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞—Ç–∞–ª–æ–≥?', await get_back_to_categories_keyboard()


async def empty_cart_msg() -> str:
    return '–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞'


async def choose_category_msg(categories: list) -> (str, InlineKeyboardMarkup):
    return '–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:', await get_categories_keyboard(categories)


async def empty_catalogue_msg() -> str:
    return '–ö–∞—Ç–∞–ª–æ–≥ –ø—É—Å—Ç'


async def cart_msg(category: str, product_info: dict, product: Product) -> (str, InlineKeyboardMarkup):
    total_cost = round(product_info["amount"] * product.cost * ((100 - product.discount) / 100))
    msg = f'–ö–∞—Ç–µ–≥–æ—Ä–∏—è: {category}\n' \
          f'–ù–∞–∑–≤–∞–Ω–∏–µ: {product_info["name"]}\n' \
          f'–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {product_info["amount"]} —à—Ç. (max: {product.amount})\n' \
          f'–ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å —Å–æ —Å–∫–∏–¥–∫–æ–π {product.discount}%: {total_cost} —Ä—É–±.'
    keyboard = await get_cart_options_keyboard(
        product_id=product.product_id,
        category=category,
        cart_amount=product_info['amount'],
        in_cart=True
    )
    return msg, keyboard


async def update_cart_msg(init_msg: str, cart_amount: int, total_cost: float, product: Product) -> (
        str, InlineKeyboardMarkup):
    msg = init_msg.split('\n')
    msg[2] = f'–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {cart_amount} —à—Ç. (max: {product.amount})'
    msg[3] = f'–ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å —Å–æ —Å–∫–∏–¥–∫–æ–π {product.discount}%: {total_cost} —Ä—É–±.'
    keyboard = await get_cart_options_keyboard(
        product_id=product.product_id,
        category=product.category,
        cart_amount=cart_amount,
        in_cart=True
    )
    return '\n'.join(msg), keyboard


async def invoice_msg() -> (str, str):
    return '–û–ø–ª–∞—Ç–∞ —Ç–æ–≤–∞—Ä–∞', '–í–≤–µ–¥–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ'


async def choose_payment_msg() -> (str, InlineKeyboardMarkup):
    return '<b>–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã</b>', await get_payment_keyboard()


async def successful_payment_msg(total_price: float, currency: str) -> str:
    return f'–ü–ª–∞—Ç–µ–∂ –Ω–∞ —Å—É–º–º—É <i>{total_price} {currency}</i> –ø—Ä–æ—à–µ–ª <b>—É—Å–ø–µ—à–Ω–æ</b>\n\n<b>–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –ø–æ–∫—É–ø–∫—É!</b>'
