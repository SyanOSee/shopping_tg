# Project
from keyboards import *
from start import database


class Ru:
    @staticmethod
    def about_name() -> str:
        return '‚ÑπÔ∏è –û –Ω–∞—Å'

    @staticmethod
    def faq_name() -> str:
        return '‚ùì FAQ'

    @staticmethod
    def cart_name() -> str:
        return 'üõí –ö–æ—Ä–∑–∏–Ω–∞'

    @staticmethod
    def choose_product_name() -> str:
        return 'üõè –í—ã–±—Ä–∞—Ç—å –º–µ–±–µ–ª—å'

    @staticmethod
    def payment_name() -> str:
        return 'üí∏ –û–ø–ª–∞—Ç–∞'

    @staticmethod
    def go_back_name() -> str:
        return '–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥'

    @staticmethod
    def add_to_cart_name() -> str:
        return '–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É'

    @staticmethod
    def remove_from_cart_name() -> str:
        return '–£–±—Ä–∞—Ç—å –∏–∑ –∫–æ—Ä–∑–∏–Ω—É'

    @staticmethod
    def do_not_spam() -> str:
        return '–ù–µ —Å–ø–∞–º–∏—Ç—å!'

    @staticmethod
    def greeting_msg() -> str:
        return '<b>–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –≤ –Ω–∞—à–µ–º –º–∞–≥–∞–∑–∏–Ω–µ –º–µ–±–µ–ª–∏!</b>'

    @staticmethod
    def about_msg() -> str:
        return '<b>–û –Ω–∞—Å</b>\n' \
               '–ú—ã –≤–µ–¥—É—â–∞—è –∫–æ–º–ø–∞–Ω–∏—è –ø–æ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤—É –∏ –ø—Ä–æ–¥–∞–∂–µ –≤—ã—Å–æ–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –º–µ–±–µ–ª–∏. –ù–∞—à–∞ —Ü–µ–ª—å - ' \
               '–ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –Ω–∞—à–∏–º –∫–ª–∏–µ–Ω—Ç–∞–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ–≥–æ ' \
               '–≤ –∏—Ö –¥–æ–º–∞—Ö –∏ –æ—Ñ–∏—Å–∞—Ö.\n\n' \
               '<b>–ù–∞—à–∏ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:</b>\n' \
               '  ‚Ä¢ <i>–®–∏—Ä–æ–∫–∏–π –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç –º–µ–±–µ–ª–∏ –¥–ª—è –ª—é–±–æ–≥–æ —Å—Ç–∏–ª—è –∏–Ω—Ç–µ—Ä—å–µ—Ä–∞</i>\n' \
               '  ‚Ä¢ <i>–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –∫ –∫–∞–∂–¥–æ–º—É –∫–ª–∏–µ–Ω—Ç—É</i>\n' \
               '  ‚Ä¢ <i>–í—ã—Å–æ–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –∏ –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç—å –Ω–∞—à–∏—Ö –∏–∑–¥–µ–ª–∏–π</i>\n' \
               '  ‚Ä¢ <i>–û–ø—ã—Ç–Ω—ã–µ –¥–∏–∑–∞–π–Ω–µ—Ä—ã –∏ –º–∞—Å—Ç–µ—Ä–∞</i>\n' \
               '  ‚Ä¢ <i>–ö–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω—ã–µ —Ü–µ–Ω—ã –∏ –≥–∏–±–∫–∞—è —Å–∏—Å—Ç–µ–º–∞ —Å–∫–∏–¥–æ–∫</i>\n' \
               '  ‚Ä¢ <i>–ë—ã—Å—Ç—Ä–∞—è –∏ –Ω–∞–¥–µ–∂–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞</i>\n'

    @staticmethod
    def faq_msg() -> str:
        return '<b>1. –ö–∞–∫–æ–≤—ã —Å—Ä–æ–∫–∏ –¥–æ—Å—Ç–∞–≤–∫–∏?</b>\n' \
               ' - –û–±—ã—á–Ω–æ —Å—Ä–æ–∫–∏ –¥–æ—Å—Ç–∞–≤–∫–∏ —Å–æ—Å—Ç–∞–≤–ª—è—é—Ç –æ—Ç 3 –¥–æ 7 —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π, –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤–∞—à–µ–≥–æ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è –∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Ç–æ–≤–∞—Ä–∞.\n\n' \
               '<b>2. –ú–æ–≥—É –ª–∏ —è –≤–µ—Ä–Ω—É—Ç—å –∏–ª–∏ –æ–±–º–µ–Ω—è—Ç—å —Ç–æ–≤–∞—Ä?</b>\n' \
               ' - –î–∞, –º—ã –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º –ø–æ–ª–∏—Ç–∏–∫—É –≤–æ–∑–≤—Ä–∞—Ç–∞ –∏ –æ–±–º–µ–Ω–∞. –ï—Å–ª–∏ –≤—ã –Ω–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω—ã –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–Ω—ã–º —Ç–æ–≤–∞—Ä–æ–º, –≤—ã –º–æ–∂–µ—Ç–µ –≤–µ—Ä–Ω—É—Ç—å –µ–≥–æ –≤ —Ç–µ—á–µ–Ω–∏–µ 14 –¥–Ω–µ–π —Å–æ –¥–Ω—è –ø–æ–∫—É–ø–∫–∏.\n\n' \
               '<b>3. –ï—Å—Ç—å –ª–∏ —É –≤–∞—Å –≥–∞—Ä–∞–Ω—Ç–∏—è –Ω–∞ –ø—Ä–æ–¥—É–∫—Ü–∏—é?</b>\n' \
               ' - –î–∞, –º—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º –≥–∞—Ä–∞–Ω—Ç–∏—é –Ω–∞ –Ω–∞—à—É –ø—Ä–æ–¥—É–∫—Ü–∏—é. –°—Ä–æ–∫ –≥–∞—Ä–∞–Ω—Ç–∏–∏ –º–æ–∂–µ—Ç —Ä–∞–∑–ª–∏—á–∞—Ç—å—Å—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–æ–≤–∞—Ä–∞.'

    @staticmethod
    async def get_product_card_info_msg(user_id: int, product: Product) -> (str, InlineKeyboardMarkup):
        message = f'<b>{product.name}</b>\n\n' \
                  f'<b>–û–ø–∏—Å–∞–Ω–∏–µ:</b>\n{product.description}\n\n' \
                  f'<b>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞ —Å–∫–ª–∞–¥–µ:</b> {product.amount} —à—Ç.\n\n' \
                  f'<b>–¶–µ–Ω–∞ —Å —É—á–µ—Ç–æ–º —Å–∫–∏–¥–∫–∏ {product.discount}%</b>: {round(product.cost * ((100 - product.discount) / 100))} —Ä—É–±.'
        keyboard = await get_add_to_cart_keyboard(product)
        if await database.product.check_in_user_cart(user_i=user_id, product=product):
            message += '\n\n<b>–î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∫–æ—Ä–∑–∏–Ω—É</b>'
            keyboard = await get_remove_from_cart_keyboard(product, False)

        return message, keyboard

    @staticmethod
    def back_to_catalogue_msg() -> str:
        return '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞—Ç–∞–ª–æ–≥?'

    @staticmethod
    def empty_cart_msg() -> str:
        return '–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞'

    @staticmethod
    def choose_category_msg() -> str:
        return '–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:'

    @staticmethod
    def empty_catalogue_msg() -> str:
        return '–ö–∞—Ç–∞–ª–æ–≥ –ø—É—Å—Ç'

    @staticmethod
    async def cart_msg(category: str, product_info: dict, product: Product) -> (str, InlineKeyboardMarkup):
        total_cost = round(product_info["amount"] * product.cost * ((100 - product.discount) / 100))
        msg = f'–ö–∞—Ç–µ–≥–æ—Ä–∏—è: {category}\n' \
              f'–ù–∞–∑–≤–∞–Ω–∏–µ: {product_info["name"]}\n' \
              f'–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {product_info["amount"]} —à—Ç. (max: {product.amount})\n' \
              f'–ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å —Å–æ —Å–∫–∏–¥–∫–æ–π {product.discount}%: {total_cost} —Ä—É–±.'
        keyboard = await get_cart_options_keyboard(
            product_id=product.product_id,
            category=category,
            cart_amount=product_info['amount'],
            in_cart=True
        )
        return msg, keyboard

    @staticmethod
    async def update_cart_msg(init_msg: str, cart_amount: int, total_cost: float, product: Product) -> (
            str, InlineKeyboardMarkup):
        msg = init_msg.split('\n')
        msg[2] = f'–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {cart_amount} —à—Ç. (max: {product.amount})'
        msg[3] = f'–ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å —Å–æ —Å–∫–∏–¥–∫–æ–π {product.discount}%: {total_cost} —Ä—É–±.'
        keyboard = await get_cart_options_keyboard(
            product_id=product.product_id,
            category=product.category,
            cart_amount=cart_amount,
            in_cart=True
        )
        return '\n'.join(msg), keyboard

    @staticmethod
    def invoice_msg() -> (str, str):
        return '–û–ø–ª–∞—Ç–∞ —Ç–æ–≤–∞—Ä–∞', '–¢–µ—Å—Ç–æ–≤–∞—è –æ–ø–ª–∞—Ç–∞\n\nAddress 1 -  –ù–æ–º–µ—Ä –¥–æ–º–∞ –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —É–ª–∏—Ü—ã\nAddress 2 -  –ù–æ–º–µ—Ä –∫–≤–∞—Ä—Ç–∏—Ä—ã / –∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–æ–≤ / –∫–æ—Ä–ø—É—Å–∞ (–Ω–æ–º–µ—Ä –∫–≤–∞—Ä—Ç–∏—Ä—ã –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –Ω–µ —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã, –Ω–æ –∏ –±—É–∫–≤—ã)'

    @staticmethod
    def choose_payment_msg() -> str:
        return '<b>–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã</b>'

    @staticmethod
    def successful_payment_msg(total_price: float, currency: str) -> str:
        return f'–ü–ª–∞—Ç–µ–∂ –Ω–∞ —Å—É–º–º—É <i>{total_price} {currency}</i> –ø—Ä–æ—à–µ–ª <b>—É—Å–ø–µ—à–Ω–æ</b>\n\n<b>–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –ø–æ–∫—É–ø–∫—É!</b>'

    @staticmethod
    def nothing_to_pay():
        return '<b>–ù–µ—Ç —Ç–æ–≤–∞—Ä–∞ –≤ –∫–æ—Ä–∑–∏–Ω–µ</b>'
